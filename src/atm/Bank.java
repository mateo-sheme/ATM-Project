/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package atm;

import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author mateo
 */
public class Bank extends javax.swing.JFrame {
        Connection con = null;
        ResultSet rs=null;
    PreparedStatement pst = null;
    /**
     * Creates new form Bank
     */
    public Bank() {
        initComponents();
        show_user();
    }
    
        
    public ArrayList<Users> usersList() {
        ArrayList<Users> usersList = new ArrayList<>();
        
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url ="jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=KlientATM; trustServerCertificate=true; user = SA; password = 123";
            Connection con = DriverManager.getConnection(url);
            String query1 = "SELECT * FROM klient";
            Statement st = (Statement) con.createStatement();
            ResultSet rs = st.executeQuery(query1);
            Users user;
            while(rs.next())
            {
                user = new Users(rs.getInt("accountNo"), rs.getString("name"), 
                        rs.getFloat("balance"), rs.getInt("card"), 
                        rs.getInt("pin"));
                usersList.add(user);
            }
        }
        
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        return usersList;
    }
    public void show_user()
    {
        ArrayList<Users> list = usersList();
        DefaultTableModel model = (DefaultTableModel)table.getModel();
        Object [] row = new Object[5];
        for(int i=0;i<list.size();i++)
        {
            row[0]=list.get(i).getaccountNo();
            row[1]=list.get(i).getname();
            row[2]=list.get(i).getbalance();
            row[3]=list.get(i).getcard();
            row[4]=list.get(i).getpin();
            model.addRow(row);
        }
    }
    
    public void update_table()
    {
        try{
            String url ="jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=KlientATM; trustServerCertificate=true; user = SA; password = 123";
            Connection con = DriverManager.getConnection(url);
            String sql2 = "SELECT * FROM klient";
            pst=con.prepareStatement(sql2);
            rs=pst.executeQuery();
            table.setModel(DbUtils.resultSetToTableModel(rs));
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
    }   
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        inputname = new javax.swing.JTextField();
        inputpin = new javax.swing.JTextField();
        depositname = new javax.swing.JTextField();
        depositcard = new javax.swing.JTextField();
        register = new javax.swing.JButton();
        deposit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        inputbalance = new javax.swing.JTextField();
        inputcard = new javax.swing.JTextField();
        despositamount = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Name");

        inputname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputnameActionPerformed(evt);
            }
        });

        inputpin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputpinKeyTyped(evt);
            }
        });

        depositcard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositcardActionPerformed(evt);
            }
        });
        depositcard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                depositcardKeyTyped(evt);
            }
        });

        register.setBackground(new java.awt.Color(0, 153, 0));
        register.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        register.setForeground(new java.awt.Color(255, 255, 255));
        register.setText("Register");
        register.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerMouseClicked(evt);
            }
        });
        register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerActionPerformed(evt);
            }
        });

        deposit.setBackground(new java.awt.Color(0, 153, 0));
        deposit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deposit.setForeground(new java.awt.Color(255, 255, 255));
        deposit.setText("Deposit");
        deposit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                depositMouseClicked(evt);
            }
        });
        deposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depositActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 204));
        jLabel4.setText("Bank");

        jButton2.setBackground(new java.awt.Color(0, 153, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(323, 323, 323)
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jButton2))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Pin");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Name");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Card");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Card");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Initial Deposit");

        inputcard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputcardActionPerformed(evt);
            }
        });
        inputcard.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputcardKeyTyped(evt);
            }
        });

        despositamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                despositamountActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Deposit Amount");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "AccountNo", "Name", "Balance", "Card", "Pin"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table);

        update.setBackground(new java.awt.Color(0, 153, 0));
        update.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        update.setForeground(new java.awt.Color(255, 255, 255));
        update.setText("Update");
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
        });
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(0, 153, 0));
        delete.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 87, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(97, 97, 97)
                                .addComponent(inputname))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(inputbalance)
                                    .addComponent(inputpin, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(inputcard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(register)
                                .addGap(34, 34, 34)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(39, 39, 39)
                                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(despositamount, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel11))
                                .addGap(101, 101, 101)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(depositcard, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(depositname, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(185, 185, 185)
                                .addComponent(deposit, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1006, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(inputname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(inputpin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(inputcard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel13)
                                            .addComponent(despositamount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(depositname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(depositcard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)))
                        .addGap(42, 42, 42)
                        .addComponent(deposit))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(inputbalance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(register)
                            .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void depositcardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositcardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_depositcardActionPerformed

    private void registerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerActionPerformed

       
        // TODO add your handling code here:
    }//GEN-LAST:event_registerActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

       
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void depositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depositActionPerformed

      

        // TODO add your handling code here:
    }//GEN-LAST:event_depositActionPerformed

    private void registerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerMouseClicked
       
        if(inputname.getText().isEmpty() || inputname.getText().equals(0))
        {
            JOptionPane.showMessageDialog(null,"Enter Valid Name");// TODO add your handling code here:
             }else if (inputpin.getText().isEmpty() || inputpin.getText().equals(0)){
                 JOptionPane.showMessageDialog(null,"Enter Valid Pin");
                    }else if(inputcard.getText().isEmpty() || inputcard.getText().equals(0)){
                           JOptionPane.showMessageDialog(null,"Enter Valid Card");
                        }else if (inputbalance.getText().isEmpty() || inputbalance.getText().equals(0)){   
                        
                       JOptionPane.showMessageDialog(null,"Enter Valid Balance");
                        }else{
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url ="jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=KlientATM; trustServerCertificate=true; user = SA; password = 123";
            Connection con = DriverManager.getConnection(url);
            String sql = "INSERT INTO klient (name,pin,card,balance) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(sql);

            pst.setString(1,inputname.getText());
            pst.setString(2, inputpin.getText());
            pst.setString(3, inputcard.getText());
            pst.setString(4, inputbalance.getText());
            int rowsEffected = pst.executeUpdate();
            
            if (rowsEffected == 0){

            JOptionPane.showMessageDialog(null, "Error Insert");
    }                        
            else{
                JOptionPane.showMessageDialog(null, "Inserted Sucessfully!");
            }
}
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        }
        update_table();
            // TODO add your handling code here:
    }//GEN-LAST:event_registerMouseClicked

    private void inputcardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputcardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputcardActionPerformed

    private void despositamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_despositamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_despositamountActionPerformed

    private void inputnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputnameActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
      this.setVisible(false);
        new ChooseBankATM().setVisible(true);  // TODO add your handling code here:
    }//GEN-LAST:event_jButton2MouseClicked

    private void depositMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_depositMouseClicked
        
        float amount=Float.parseFloat(despositamount.getText());
        
        if(depositname.getText().isEmpty() || depositname.getText().equals(0))
        {
            JOptionPane.showMessageDialog(null,"Enter Valid Name");// TODO add your handling code here:
             }else if(depositcard.getText().isEmpty() || depositcard.getText().equals(0)){
                 JOptionPane.showMessageDialog(null,"Enter Valid Card");
             }
             else if(despositamount.getText().isEmpty() || despositamount.getText().equals(0))
             {
                 JOptionPane.showMessageDialog(null,"Enter Valid Amount");
                 
             }else{
            try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url ="jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=KlientATM; trustServerCertificate=true; user = SA; password = 123";
            Connection con = DriverManager.getConnection(url);
            String sql = "Select * from klient where name=? and card=?";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1,depositname.getText());
            pst.setString(2,depositcard.getText());
            ResultSet rs=pst.executeQuery();
            if(rs.next()){
                
         float balan=rs.getInt("balance");
         float temp=balan+amount;
         
            
            String Query = "Update klient set balance = "+(temp)+" where name = ? and card =?";
            pst = con.prepareStatement(Query);
            pst.setString(1,depositname.getText());
            pst.setString(2,depositcard.getText());
           
            
            int rowsEffected = pst.executeUpdate();
            
             if (rowsEffected == 0){
                 
                 
                JOptionPane.showMessageDialog(null, "Deposit unsucessful");
            }
            else{
                 JOptionPane.showMessageDialog(null, "Deposit sucessful");
            }
               
                }
            
            }
                          
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        }
        update_table();
    
    }//GEN-LAST:event_depositMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
      if(inputname.getText().isEmpty() || inputname.getText().equals(0))
        {
            JOptionPane.showMessageDialog(null,"Enter Valid Name");// TODO add your handling code here:
             }else if (inputpin.getText().isEmpty() || inputpin.getText().equals(0)){
                 JOptionPane.showMessageDialog(null,"Enter Valid Pin");
                    }else if(inputcard.getText().isEmpty() || inputcard.getText().equals(0)){
                           JOptionPane.showMessageDialog(null,"Enter Valid Card");
                        }else{
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url ="jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=KlientATM; trustServerCertificate=true; user = SA; password = 123";
            Connection con = DriverManager.getConnection(url);
            String sql = "Select * from klient where name=? ";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1,inputname.getText());
            
            ResultSet rs=pst.executeQuery();
            if(rs.next()){
            
            String Query = "Update klient set pin=?, card =? where name = ?";
            pst = con.prepareStatement(Query);
             pst.setString(1, inputpin.getText());
              pst.setString(2, inputcard.getText());
            pst.setString(3,inputname.getText());
           
            int rowsEffected = pst.executeUpdate();
            
             if (rowsEffected == 0){
                 
                JOptionPane.showMessageDialog(null, "Update unsucessful");
            }
            else{
                 JOptionPane.showMessageDialog(null, "Update sucessful");
            }
               
                }
            
            }
                          
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
      }
        
        update_table();
        // TODO add your handling code here:
    }//GEN-LAST:event_updateMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        if(inputname.getText().isEmpty() || inputname.getText().equals(0))
        {
            JOptionPane.showMessageDialog(null,"Enter Valid Name");// TODO add your handling code here:
             }else{
        
        try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url ="jdbc:sqlserver://localhost\\MSSQLSERVER01:1433;databaseName=KlientATM; trustServerCertificate=true; user = SA; password = 123";
            Connection con = DriverManager.getConnection(url);
            String sql = "Select * from klient where name=? ";
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1,inputname.getText());
            
            ResultSet rs=pst.executeQuery();
            if(rs.next()){
            
            String Query = "Delete from klient where name = ?";
            pst = con.prepareStatement(Query);
            pst.setString(1,inputname.getText());

            int rowsEffected = pst.executeUpdate();
            
             if (rowsEffected == 0){
            
                JOptionPane.showMessageDialog(null, "Deletion unsucessful");
            }
            else{
                 JOptionPane.showMessageDialog(null, "Deletion sucessful");
            }
                }
            
            }          
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        }
        update_table();// TODO add your handling code here:
    }//GEN-LAST:event_deleteMouseClicked

    private void inputpinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputpinKeyTyped
boolean max = inputpin.getText().length() > 3;
    if ( max ){
        evt.consume();
    }  
           
    }//GEN-LAST:event_inputpinKeyTyped

    private void inputcardKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputcardKeyTyped
       boolean max = inputcard.getText().length() > 11;
    if ( max ){
        evt.consume();
    }   
    }//GEN-LAST:event_inputcardKeyTyped

    private void depositcardKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_depositcardKeyTyped
       boolean max = depositcard.getText().length() > 11;
    if ( max ){
        evt.consume();
    }   
    }//GEN-LAST:event_depositcardKeyTyped
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bank().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton delete;
    private javax.swing.JButton deposit;
    private javax.swing.JTextField depositcard;
    private javax.swing.JTextField depositname;
    private javax.swing.JTextField despositamount;
    private javax.swing.JTextField inputbalance;
    private javax.swing.JTextField inputcard;
    private javax.swing.JTextField inputname;
    private javax.swing.JTextField inputpin;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton register;
    private javax.swing.JTable table;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
